#  6.1 Что такое флаги и зачем они нужны?
""""""

"""
Чтобы использовать флаги, достаточно их передать как именованный аргумент в нужный метод:
Если нужно использовать несколько флагов сразу - нужно сложить их вместе
или написать между ними символ |
"""
import re

test1 = re.findall('123', '123', flags=re.MULTILINE)  # 1 флаг
test2 = re.findall('123', '123', flags=re.MULTILINE + re.IGNORECASE)  # 2 флага
test3 = re.findall('123', '123', flags=re.MULTILINE + re.IGNORECASE + re.DOTALL)  # 3 флага

test4 = re.findall('123', '123', flags=re.MULTILINE)  # 1 флаг
test5 = re.findall('123', '123', flags=re.MULTILINE | re.IGNORECASE)  # 2 флага
test6 = re.findall('123', '123', flags=re.MULTILINE | re.IGNORECASE | re.DOTALL)  # 3 флага


# У флагов существуют сокращённые версии. Они позволяют сократить код в размере.
# Полная версия
test1 = re.findall('123', '123', flags=re.MULTILINE)  # 1 флаг
test2 = re.findall('123', '123', flags=re.MULTILINE + re.IGNORECASE)  # 2 флага
test3 = re.findall('123', '123', flags=re.MULTILINE + re.IGNORECASE + re.DOTALL)  # 3 флага

# Сокращенная версия
test1 = re.findall('123', '123', flags=re.M)  # 1 флаг
test2 = re.findall('123', '123', flags=re.M + re.I)  # 2 флага
test3 = re.findall('123', '123', flags=re.M + re.I + re.S)  # 3 флага


"""
Встроенные флаги
Также флаги можно указать в самом регулярном выражении. 
Достаточно просто поставить встроенный флаг перед регулярным выражением r"(?i)[a-z]"
Если нужно использовать сразу несколько флагов - достаточно их перечислить: r"(?ims)[a-z]"
"""

"""
Локальные и глобальные флаги

Все флаги которые только что были пройдены - глобальные, т.е. они действуют на всё регулярное выражение целиком.
Но что если нам нужно отключить флаг в какой-либо части выражения, или вообще использовать его только там?
На помощь приходят локальные флаги! Пока они есть только в встроенном виде: (?aiLmsux-imsx:regex)
Все флаги до - используются вместе с regex, а флаги, стоящие после - перестают работать с regex

Например, в следующем регулярном выражении:
regex = r"(?i)(?ms-i:local) global"
Используется глобальный флаг i, но он будет работать только при поиске текста global.
А при поиске текста local, флаг i отключается, и вместо него используются флаги m и s
"""

"""
Объект RegexFlag
Ещё совсем недавно мы получали из объекта Pattern флаги в числовом виде. 
Чтобы конвертировать их в привычный нам вид, достаточно провести следующие манипуляции:
"""
import re

pattern = re.compile(r'[a-zA-Z]{1,}')
print(pattern.flags) # 32
print(re.RegexFlag(32)) # re.UNICODE
