# 2.11 Скобочные выражения
""""""
import re
string = ''


# Task 01
"""
Написать регулярное выражение, которое получит последовательность из любых символов от [^START] до {(END.)}
Input:  [^START]Text{(END.)}
Output: Text
"""
regex = '(?<=\[\^START\]).*(?={\(END\.\)})'
res = re.findall(regex, string)


# Task 02
"""
Найти все символы /, слева и справа от которых ничего нет или стоят другие символы, не равные /
Input:  /text // /// text/
Output: / /
"""
regex = r''
res = re.findall(regex, string)


# Task 03
"""
Найти все последовательности x с чётной длиной
Input:  x xx xxx xxxx xxxxx xxxxxx xxxxxxx
Output: xx xxxx xxxxxx
"""
regex = r'\b(?:xx)+\b'  # Non-capturing group
# regex = r'(?<=\b)(xx)+(?=\b)'
# regex = r'(?<!x)(xx)+(?!x)'
res = re.findall(regex, string)


# Task 04
"""
Найти все имена и названия в тексте. Слова в начале предложения не считаются.
Условия:
- Последовательность букв, которая начинается на заглавную букву.
- Используется кириллический алфавит нижнего и верхнего регистров.
- Последовательность не стоит в начале предложения.
- Перед последовательностью не должно заканчиваться предложение, т.е. не стоит: .!?
Input:  Меня зовут Егор. Мне нравится ходить у реки Волги, что проходит через город Ярославль. 
        Надеюсь, что моя мечта - поездка во Владивосток, скоро осуществится.
Output: Егор Волги Ярославль Владивосток
"""
regex = r'(?<!^)(?<![.!?]\s)[А-ЯЁ]\w*'
res = re.findall(regex, string)


# Task 05
"""
Найти последовательности, подходящие по следующим условиям:
- Состоит из арабских цифр
- Перед последовательностью не стоит минус
- Не является подпоследовательностью
Input:  4902 84234-32 3129 -1 -3 -1 3-1 31-3 12 391 -319-31
Output: 4902 84234 3129 3 31 12 391
"""
regex = r'\b(?<!-)\d+'
# regex = r'(?<!-)\b\d+'
# regex = r'(?<![\d-])\d+'
res = re.findall(regex, string)

