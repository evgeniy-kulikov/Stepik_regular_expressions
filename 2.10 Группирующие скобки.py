# 2.10 Группирующие скобки
""""""
import re
string = ''


"""
если мы находим группу (1) т.е. (мы|вы|они), 
то ищем в конце слова "готов" букву "ы"

если находим группу (2) т.е.(я|ты), 
то о ищем в конце слова "готов" 0 или 1 букву "а", потому что "а?"

если мы находим группу (3) (она), 
то о ищем в конце слова "готов" 1 букву "а", потому что "а" без "?"


и доходим до группы (4) - (он) и ищем то что идёт после последнего |  
и прибавляем к слову "готов", получается "готов".


Input:  мы готовы они готовы я готов ты готов она готова я готовы мы готова он готовы
Output: мы готовы они готовы я готов ты готов она готова
"""
regex = r'(?:(мы|вы|они)|(я|ты)|(она)|(он)) готов(?(1)ы|(?(2)а?|(?(3)а|)))\b'



# Task 01
"""
найти последовательности, подходящие по следующим условиям:
В левой части любая последовательность из 3 арабских цифр
В правой части точно такая же последовательность
Input:  11122w2777777999333
Output: 777 777
"""
regex = r'(?P<trio>\d{3})(?P=trio)'
res = re.findall(regex, string)


# Task 02
"""
Найти все слова и словосочетания, состоящие из двух одинаковых частей. 
Между одинаковыми половинами слова может стоять дефис.
    В левой части любая последовательность букв кириллического алфавита нижнего регистра
    В правой части точно такая же последовательность
    Между ними может стоять тире
    Последовательность не может быть подпоследовательностью
Input:  йо-йо балалайка гиппопотам чуть-чуть мама папа дядя мимикрия татарин кокос довод
Output: йо-йо чуть-чуть мама папа дядя
"""
regex = r'\b(?P<word>[а-яё]+)-?(?P=word)\b'
# regex = r'\b([а-яё]+)-?\1\b'  # Ссылка на нумерованные группы

res = re.findall(regex, string)


# Task 03
"""
Найти все повторяющиеся буквы в тексте по следующим условиям:
- Последовательность из 2 одинаковых букв
- Используются буквы латинского и кириллического алфавитов нижнего и верхнего регистров
Input:  
Output: 
"""
regex = r'([a-zA-Zа-яА-ЯёЁ]{1})\1'
res = re.findall(regex, string)


# Task 04
"""
найти последовательности из 2 одинаковых арабских цифр
Input:  534535345377777753453
Output: 5353 7777
"""
regex = r'(\d{2})\1'
res = re.findall(regex, string)


# Task 05
"""
Найти все последовательности if и <if>, но не <if и if>, стоящие между началом и концом строки.
найти:
- Последовательности if без скобок или со скобками, стоящими с двух сторон: if и <if>
- Последовательность стоит в начале строки
- После последовательности строка заканчивается
Input:  <if>
Output: <if>
"""
# Положительный lookhead
# https://learn.microsoft.com/ru-ru/dotnet/standard/base-types/regular-expression-language-quick-reference
# regex = r'^(<)?(?(1)if>|if(?=))$'

# Простое "или"
# regex = r'^<if>$|^if$'

# Условие для группы
regex = r'^(<)?if(?(1)>|)$'

res = re.findall(regex, string)






# Task 0
"""

Input:  
Output: 
"""
regex = r''
res = re.findall(regex, string)

